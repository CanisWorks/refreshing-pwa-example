name: PWA App Deployment
on:
  push:
    branches:
      - main
jobs:
  version-app:
    runs-on: ubuntu-latest
    outputs:
      next_version: ${{ steps.next_version.outputs.version }}
    steps:
      - id: match_version
        uses: zwaldowski/match-label-action@v4
        with:
          allowed: major, minor, patch
          default_match: patch
      - id: next_version
        uses: zwaldowski/semver-release-action@v3
        with:
          bump: ${{ steps.match_version.outputs.match }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
  build:
    runs-on: ubuntu-latest
    needs: [version-app]
    env:
      ARTIFACT_NAME: build_rc_${{ needs.version-app.outputs.next_version }}
    outputs:
      artifact_name: ${{ env.ARTIFACT_NAME }}
    steps:
      - uses: actions/checkout@v3
      - name: setup nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - run: npm ci
      - run: npm run build
        env:
          REACT_APP_VERSION_ID: ${{ needs.version-app.outputs.next_version }}
      - name: archive build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: build
  deploy_prod:
    runs-on: ubuntu-latest
    needs: [build]
    environment: production
    permissions:
      id-token: write
      contents: read
    steps:
      - name: download artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build.outputs.artifact_name }}
          path: ./artifact
      - name: replace config file
        run: mv ./artifact/env-config/prod.config.js ./artifact/config.js
      - name: remove extra config files
        run: rm -rf ./artifact/env-config
      - run: echo "the region ${{ secrets.AWS_REGION }}"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ secrets.DEPLOY_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: publish to S3
        run: aws s3 sync ./artifact/ s3://${{ secrets.S3_BUCKET_NAME }} --delete

  